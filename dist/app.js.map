{
  "version": 3,
  "sources": ["../node_modules/@dom111/element/dist/Element.js", "../src/lib/Colour.ts", "../src/components/Element.ts", "../src/components/Cell.ts", "../src/components/Point.ts", "../src/lib/Path.ts", "../src/lib/PathFinder.ts", "../src/components/Grid.ts", "../src/lib/LevelProvider.ts", "../src/app.ts"],
  "sourcesContent": ["\"use strict\";var e,t=this&&this.__classPrivateFieldSet||function(e,t,s,r,o){if(\"m\"===r)throw new TypeError(\"Private method is not writable\");if(\"a\"===r&&!o)throw new TypeError(\"Private accessor was defined without a setter\");if(\"function\"==typeof t?e!==t||!o:!t.has(e))throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");return\"a\"===r?o.call(e,s):o?o.value=s:t.set(e,s),s},s=this&&this.__classPrivateFieldGet||function(e,t,s,r){if(\"a\"===s&&!r)throw new TypeError(\"Private accessor was defined without a getter\");if(\"function\"==typeof t?e!==t||!r:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return\"m\"===s?r:\"a\"===s?r.call(e):r?r.value:t.get(e)};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Element=exports.t=exports.s=exports.removeClass=exports.onEach=exports.once=exports.on=exports.off=exports.hasClass=exports.empty=exports.emitCustom=exports.emit=exports.addClass=void 0;exports.addClass=(e,...t)=>e.classList.add(...t);exports.emit=(e,t)=>e.dispatchEvent(t);exports.emitCustom=(e,t,...s)=>(0,exports.emit)(e,new CustomEvent(t,{detail:s}));exports.empty=e=>{for(var t;e.hasChildNodes();)null===(t=e.firstChild)||void 0===t||t.remove()};exports.hasClass=(e,t)=>e.classList.contains(t);exports.off=(e,t,s,r={})=>e.removeEventListener(t,s,r);exports.on=(e,t,s,r={})=>e.addEventListener(t,s,r);exports.once=(e,t,s,r={})=>(0,exports.on)(e,t,s,Object.assign(Object.assign({},\"boolean\"==typeof r?{capture:r}:r),{once:!0}));exports.onEach=(e,t,s,r={})=>t.forEach((t=>(0,exports.on)(e,t,s,r)));exports.removeClass=(e,...t)=>e.classList.remove(...t);exports.s=e=>{const t=document.createElement(\"div\");return t.innerHTML=e,t.firstElementChild};exports.t=e=>document.createTextNode(e);class r{constructor(s){e.set(this,void 0),t(this,e,s,\"f\")}static fromString(e){return new r((0,exports.s)(e))}addClass(...e){(0,exports.addClass)(this.element(),...e)}append(...e){e.forEach((e=>{e instanceof r&&(e=e.element()),this.element().append(e)}))}element(){return s(this,e,\"f\")}emit(e){return(0,exports.emit)(this.element(),e)}emitCustom(e,...t){return(0,exports.emitCustom)(this.element(),e,...t)}empty(){(0,exports.empty)(this.element())}hasClass(e){return(0,exports.hasClass)(this.element(),e)}on(e,t,s={}){(0,exports.on)(this.element(),e,t,s)}off(e,t,s={}){(0,exports.off)(this.element(),e,t,s)}once(e,t,s={}){(0,exports.once)(this.element(),e,t,s)}onEach(e,t,s={}){(0,exports.onEach)(this.element(),e,t,s)}query(e){return this.element().querySelector(e)}queryAll(e){return this.element().querySelectorAll(e)}removeClass(...e){(0,exports.removeClass)(this.element(),...e)}}exports.Element=r,e=new WeakMap,exports.default=r;", "export enum Colour {\n  NONE = null,\n  RED = 1,\n  GREEN,\n  BLUE,\n  YELLOW,\n  ORANGE,\n  LIGHT_BLUE,\n  PINK,\n  MAROON,\n  PURPLE,\n  WHITE,\n  GREY,\n  LIGHT_GREEN,\n  BEIGE,\n  DARK_BLUE,\n  TEAL,\n  DARK_PINK,\n}\n\nconst colourToClassNameLookup = {\n  [Colour.RED]: 'red',\n  [Colour.GREEN]: 'green',\n  [Colour.BLUE]: 'blue',\n  [Colour.YELLOW]: 'yellow',\n  [Colour.ORANGE]: 'orange',\n  [Colour.LIGHT_BLUE]: 'light-blue',\n  [Colour.PINK]: 'pink',\n  [Colour.MAROON]: 'maroon',\n  [Colour.PURPLE]: 'purple',\n  [Colour.WHITE]: 'white',\n  [Colour.GREY]: 'grey',\n  [Colour.LIGHT_GREEN]: 'light-green',\n  [Colour.BEIGE]: 'beige',\n  [Colour.DARK_BLUE]: 'dark-blue',\n  [Colour.TEAL]: 'teal',\n  [Colour.DARK_PINK]: 'dark-pink',\n};\n\nexport const colourToClassName = (...colours: number[]): string[] =>\n  colours.map((colour) => colourToClassNameLookup[colour]);\n\nexport default Colour;\n", "import BaseElement from '@dom111/element';\nexport { s } from '@dom111/element';\n\nexport class Element extends BaseElement {\n  attr(key: string, value: any = ''): void {\n    this.element().setAttribute(key, value);\n  }\n\n  removeAttr(key: string): void {\n    if (!this.element().hasAttribute(key)) {\n      return;\n    }\n\n    this.element().removeAttribute(key);\n  }\n}\n\nexport default Element;\n", "import Colour, { colourToClassName } from '../lib/Colour';\nimport Element, { s } from './Element';\n\nexport type Connection = 't' | 'r' | 'b' | 'l';\n\nexport class Cell extends Element {\n  #colour: Colour = Colour.NONE;\n  #connections: Connection[] = [];\n  #index: number;\n\n  constructor(index: number) {\n    super(s('<div class=\"cell\"></div>'));\n\n    this.#index = index;\n  }\n\n  colour(): Colour {\n    return this.#colour;\n  }\n\n  index(): number {\n    return this.#index;\n  }\n\n  setColour(colour: Colour): void {\n    if (this.#colour) {\n      this.removeClass(...colourToClassName(this.#colour));\n    }\n\n    this.#colour = colour;\n\n    if (!colour) {\n      return;\n    }\n\n    this.addClass(...colourToClassName(colour));\n  }\n\n  addConnection(connection: Connection): void {\n    if (this.#connections.includes(connection)) {\n      return;\n    }\n\n    this.#connections.push(connection);\n\n    this.attr('data-connections', this.#connections.join(' '));\n  }\n\n  dropConnection(connection: Connection): void {\n    const connectionIndex = this.#connections.indexOf(connection);\n\n    if (connectionIndex === -1) {\n      return;\n    }\n\n    this.#connections.splice(connectionIndex, 1);\n\n    if (this.#connections.length === 0) {\n      this.removeAttr('data-connections');\n\n      return;\n    }\n\n    this.attr('data-connections', this.#connections.join(' '));\n  }\n\n  setFinal(final: boolean) {\n    if (final) {\n      this.attr('data-final');\n\n      return;\n    }\n\n    this.removeAttr('data-final');\n  }\n}\n\nexport default Cell;\n", "import Cell from './Cell';\nimport Colour from '../lib/Colour';\n\nexport class Point extends Cell {\n  constructor(index: number, colour: Colour) {\n    super(index);\n\n    super.setColour(colour);\n\n    this.addClass('point');\n  }\n\n  setColour(colour: Colour): never {\n    throw new TypeError('Cannot change the colour of a Point');\n  }\n}\n\nexport default Point;\n", "import Cell, { Connection } from '../components/Cell';\nimport Colour from './Colour';\nimport Grid from '../components/Grid';\nimport Point from '../components/Point';\n\nexport type NeighbourDirections = 't' | 'r' | 'b' | 'l';\n\nexport const isNeighbour = (\n  cell: Cell,\n  otherCell: Cell,\n  height: number,\n  width: number\n): NeighbourDirections | false => {\n  const x = (cell.index() % width) - (otherCell.index() % width),\n    y =\n      Math.floor(cell.index() / width) - Math.floor(otherCell.index() / width);\n\n  if (x === -1 && y === 0) {\n    return 'l';\n  }\n\n  if (x === 1 && y === 0) {\n    return 'r';\n  }\n\n  if (x === 0 && y === -1) {\n    return 't';\n  }\n\n  if (x === 0 && y === 1) {\n    return 'b';\n  }\n\n  return false;\n};\n\nexport enum Status {\n  DRAFT,\n  FINAL,\n  COMPLETE,\n}\n\nexport class Path {\n  #cells: Cell[] = [];\n  #colour: Colour;\n  #grid: Grid;\n  #status: Status = Status.DRAFT;\n\n  constructor(colour: Colour, grid: Grid) {\n    this.#colour = colour;\n    this.#grid = grid;\n  }\n\n  breakAt(cell: Cell): void {\n    if (!this.includes(cell)) {\n      return;\n    }\n\n    const breakIndex = this.#cells.indexOf(cell),\n      startChain = this.#cells.slice(0, breakIndex),\n      endChain = this.#cells.slice(breakIndex);\n\n    if (\n      endChain.length > startChain.length &&\n      this.first() instanceof Point &&\n      this.last() instanceof Point\n    ) {\n      this.#cells.reverse();\n    }\n\n    while (this.last() !== cell) {\n      this.pop();\n    }\n  }\n\n  canAdd(cell: Cell): boolean {\n    const last = this.last();\n\n    if (last === null) {\n      return cell instanceof Point;\n    }\n\n    if (this.complete()) {\n      return false;\n    }\n\n    return (\n      this.isNeighbour(last, cell) &&\n      (!(cell instanceof Point) || cell.colour() === this.colour())\n    );\n  }\n\n  clear(): void {\n    while (this.last()) {\n      this.pop();\n    }\n  }\n\n  colour(): Colour {\n    return this.#colour;\n  }\n\n  complete(): boolean {\n    const first = this.first(),\n      last = this.last();\n\n    return (\n      this.length() > 1 &&\n      first &&\n      last &&\n      first !== last &&\n      first instanceof Point &&\n      last instanceof Point\n    );\n  }\n\n  first(): Cell | null {\n    if (this.length() === 0) {\n      return null;\n    }\n\n    return this.#cells[0];\n  }\n\n  includes(cell: Cell): boolean {\n    return this.#cells.includes(cell);\n  }\n\n  private isNeighbour(\n    cell: Cell,\n    otherCell: Cell\n  ): NeighbourDirections | false {\n    return isNeighbour(\n      cell,\n      otherCell,\n      this.#grid.height(),\n      this.#grid.width()\n    );\n  }\n\n  last(): Cell | null {\n    if (this.length() === 0) {\n      return null;\n    }\n\n    return this.#cells[this.length() - 1];\n  }\n\n  length(): number {\n    return this.#cells.length;\n  }\n\n  pop(): void {\n    if (this.length() === 0) {\n      return;\n    }\n\n    const wasComplete = this.complete(),\n      cell = this.#cells.pop(),\n      last = this.last();\n\n    if (!(cell instanceof Point)) {\n      cell.setColour(Colour.NONE);\n    }\n\n    cell.setFinal(false);\n\n    if (last) {\n      last.dropConnection(this.isNeighbour(cell, last) as Connection);\n      cell.dropConnection(this.isNeighbour(last, cell) as Connection);\n    }\n\n    if (wasComplete) {\n      cell.setFinal(false);\n      this.#cells.forEach((cell) => cell.setFinal(false));\n      this.setStatus(Status.DRAFT);\n    }\n  }\n\n  push(cell: Cell): void {\n    const last = this.last();\n\n    if (last && !this.canAdd(cell)) {\n      return;\n    }\n\n    this.#cells.push(cell);\n\n    if (!(cell instanceof Point)) {\n      cell.setColour(this.#colour);\n    }\n\n    if (last) {\n      last.addConnection(this.isNeighbour(cell, last) as Connection);\n      cell.addConnection(this.isNeighbour(last, cell) as Connection);\n    }\n\n    if (this.complete()) {\n      this.setStatus(Status.COMPLETE);\n    }\n  }\n\n  setStatus(status: Status): void {\n    if (this.#status === Status.COMPLETE && status === Status.FINAL) {\n      return;\n    }\n\n    this.#status = status;\n\n    if (status === Status.DRAFT) {\n      this.#cells.forEach((cell) => cell.setFinal(false));\n\n      return;\n    }\n\n    this.#cells.forEach((cell) => cell.setFinal(true));\n  }\n\n  status(): Status {\n    return this.#status;\n  }\n}\n\nexport default Path;\n", "import { NeighbourDirections, isNeighbour } from './Path';\nimport Cell from '../components/Cell';\nimport Grid from '../components/Grid';\nimport Point from '../components/Point';\n\ntype Node = {\n  cell: Cell;\n  stack: Cell[];\n};\n\nconst createNode = (cell: Cell, stack: Cell[] = []): Node => ({\n  cell,\n  stack,\n});\n\nexport class PathFinder {\n  #candidates: Cell[][] = [];\n  #cells: Cell[];\n  #from: Cell;\n  #grid: Grid;\n  #neighbourCache: Map<Cell, Cell[]> = new Map();\n  #seen: Cell[] = [];\n  #stack: Node[] = [];\n  #to: Cell;\n\n  constructor(grid: Grid, from: Cell, to: Cell) {\n    this.#from = from;\n    this.#grid = grid;\n    this.#to = to;\n\n    this.#cells = grid.cells();\n    this.#stack.push(createNode(from));\n  }\n\n  private generate(): void {\n    while (this.#stack.length) {\n      const currentNode = this.#stack.shift(),\n        { cell } = currentNode;\n\n      if (this.#seen.includes(cell)) {\n        continue;\n      }\n\n      this.neighboursOf(cell).forEach((neighbourCell) => {\n        if (\n          neighbourCell instanceof Point &&\n          this.#from.colour() !== neighbourCell.colour()\n        ) {\n          return;\n        }\n\n        if (currentNode.stack.includes(neighbourCell)) {\n          return;\n        }\n\n        const node = createNode(neighbourCell, [...currentNode.stack, cell]);\n\n        if (neighbourCell === this.#to) {\n          this.#candidates.push(node.stack);\n\n          return;\n        }\n\n        this.#stack.push(node);\n      });\n\n      this.#seen.push(cell);\n    }\n  }\n\n  private isNeighbour(\n    cell: Cell,\n    otherCell: Cell\n  ): NeighbourDirections | false {\n    return isNeighbour(\n      cell,\n      otherCell,\n      this.#grid.height(),\n      this.#grid.width()\n    );\n  }\n\n  isPathAvailable(): boolean {\n    if (this.#candidates.length === 0) {\n      this.generate();\n    }\n\n    return this.#candidates.length > 0;\n  }\n\n  private neighboursOf(cell: Cell): Cell[] {\n    if (!this.#neighbourCache.has(cell)) {\n      this.#neighbourCache.set(\n        cell,\n        this.#cells.filter(\n          (otherCell) => this.isNeighbour(cell, otherCell) !== false\n        )\n      );\n    }\n\n    return this.#neighbourCache.get(cell);\n  }\n\n  /**\n   * Returns the shortest path from the source to the target, excluding the source Cell.\n   */\n  shortestPath(): Cell[] {\n    if (this.#candidates.length === 0) {\n      this.generate();\n    }\n\n    const [shortest] = this.#candidates.sort(\n      (a: Cell[], b: Cell[]) => a.length - b.length\n    );\n\n    return shortest;\n  }\n}\n\nexport default PathFinder;\n", "import Element, { s } from './Element';\nimport Path, { Status } from '../lib/Path';\nimport Cell from './Cell';\nimport PathFinder from '../lib/PathFinder';\nimport Point from './Point';\n\nexport class Grid extends Element {\n  #cellMap: Map<HTMLElement, Cell> = new Map();\n  #currentPath: Path | null = null;\n  #paths: Map<number, Path> = new Map();\n  #height: number;\n  #width: number;\n\n  constructor(height: number, width: number, cells: Cell[] = []) {\n    super(s('<div class=\"grid\"></div>'));\n\n    this.setSize(height, width);\n\n    cells.forEach((cell) => {\n      this.#cellMap.set(cell.element(), cell);\n\n      this.append(cell);\n    });\n\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    this.on('pointerdown', (event) => {\n      if (!event.isPrimary) {\n        return;\n      }\n\n      event.preventDefault();\n\n      const cell = this.cellFromEvent(event);\n\n      if (cell === null) {\n        return;\n      }\n\n      const existingPath = this.pathFromCell(cell);\n\n      if (\n        existingPath &&\n        existingPath.complete() &&\n        existingPath.last() === cell\n      ) {\n        this.#currentPath = existingPath;\n\n        existingPath.setStatus(Status.DRAFT);\n\n        existingPath.clear();\n\n        existingPath.push(cell);\n\n        return;\n      }\n\n      if (existingPath && existingPath.last() !== cell) {\n        this.#currentPath = existingPath;\n\n        existingPath.setStatus(Status.DRAFT);\n\n        existingPath.breakAt(cell);\n\n        return;\n      }\n\n      if (existingPath && existingPath.last() === cell) {\n        this.#currentPath = existingPath;\n\n        existingPath.setStatus(Status.DRAFT);\n\n        return;\n      }\n\n      if (!(cell instanceof Point)) {\n        return;\n      }\n\n      const path = new Path(cell.colour(), this);\n\n      this.#currentPath = path;\n\n      path.push(cell);\n      this.#paths.set(path.colour(), path);\n    });\n\n    this.on(\n      'pointerenter',\n      (event) => {\n        if (!event.isPrimary) {\n          return;\n        }\n\n        const cell = this.cellFromEvent(event),\n          currentPath = this.#currentPath;\n\n        if (\n          cell === null ||\n          currentPath === null ||\n          (currentPath &&\n            currentPath.status() === Status.COMPLETE &&\n            !currentPath.includes(cell)) ||\n          currentPath.last() === cell\n        ) {\n          return;\n        }\n\n        this.handleAddCellToCurrentPath(cell);\n      },\n      {\n        capture: true,\n      }\n    );\n\n    this.on('pointerup', () => {\n      if (this.#currentPath === null) {\n        return;\n      }\n\n      // TODO: break crossed paths\n      this.#currentPath.setStatus(Status.FINAL);\n\n      if (this.#currentPath.length() < 2) {\n        this.#currentPath.clear();\n\n        this.#paths.delete(this.#currentPath.colour());\n      }\n\n      this.#currentPath = null;\n    });\n  }\n\n  cells(): Cell[] {\n    return Array.from(this.#cellMap.values());\n  }\n\n  private cellFromEvent(event: PointerEvent): Cell | null {\n    return (\n      this.#cellMap.get(\n        document.elementFromPoint(event.pageX, event.pageY) as HTMLElement\n      ) ?? null\n    );\n  }\n\n  private handleAddCellToCurrentPath(cell: Cell): void {\n    const otherPath = this.pathFromCell(cell, this.#currentPath),\n      currentPath = this.#currentPath;\n\n    if (otherPath && otherPath !== currentPath && !(cell instanceof Point)) {\n      otherPath.breakAt(cell);\n      otherPath.pop();\n    }\n\n    if (currentPath.includes(cell) && currentPath.last() !== cell) {\n      currentPath.breakAt(cell);\n    }\n\n    if (currentPath.canAdd(cell)) {\n      currentPath.push(cell);\n\n      return;\n    }\n\n    const last = currentPath.last();\n\n    // TODO: instead of doing this check, this should never happen...\n    if (!last) {\n      return;\n    }\n\n    const pathFinder = new PathFinder(this, last, cell);\n\n    if (pathFinder.isPathAvailable()) {\n      pathFinder\n        .shortestPath()\n        .forEach((cell) => this.handleAddCellToCurrentPath(cell));\n    }\n  }\n\n  height(): number {\n    return this.#height;\n  }\n\n  private pathFromCell(\n    cell: Cell,\n    currentPath: Path | null = null\n  ): Path | null {\n    let path = null;\n\n    this.#paths.forEach((existingPath) => {\n      if (path) {\n        return;\n      }\n\n      if (existingPath.includes(cell)) {\n        path = existingPath;\n      }\n    });\n\n    if (\n      path === null &&\n      cell instanceof Point &&\n      this.#paths.has(cell.colour())\n    ) {\n      path = this.#paths.get(cell.colour());\n\n      if (path !== currentPath && !path.canAdd(cell)) {\n        path.clear();\n      }\n    }\n\n    return path;\n  }\n\n  private setSize(height: number, width: number): void {\n    this.#height = height;\n    this.#width = width;\n\n    this.element().style.setProperty('--height', height.toString());\n    this.element().style.setProperty('--width', width.toString());\n  }\n\n  width(): number {\n    return this.#width;\n  }\n}\n\nexport default Grid;\n", "import Colour from './Colour';\n\nconst levels: [number, number, string][] = [\n  [3, 3, 'a1abc2bc'],\n  [8, 8, '2b7gfe5d10d1f3b1g2e1c2ca1h3a5h'],\n  [15, 15, '4o1i9l6a11eb5g5e20j2g26n9f1f9l7h1o7n10j7c6pd3mc4h5p6im3kad23b2k]'],\n  [6, 5, '1d2a4b2b1c2c10da'],\n];\n\ntype LevelData = [number, number, Colour[]];\n\nenum Difficulty {\n  SIMPLE,\n  EASY,\n  NORMAL,\n  HARD,\n  X_HARD,\n}\n\nconst loadFromString = (\n  height: number,\n  width: number,\n  gridDefinition: string\n): LevelData => {\n  const matches = gridDefinition.match(/\\d+|[a-z]/gi);\n\n  if (matches === null) {\n    throw new TypeError('Invalid level definition');\n  }\n\n  const cells = matches.flatMap((value: string): Colour | Colour[] => {\n    if (/^\\d+$/.test(value)) {\n      return new Array(parseInt(value)).fill(Colour.NONE);\n    }\n\n    if (/^[a-z]/i.test(value)) {\n      return parseInt(value, 36) - 9;\n    }\n\n    throw new TypeError(`Unknown level data '${value}'.`);\n  });\n\n  const area = height * width;\n\n  if (cells.length < area) {\n    cells.push(...new Array(area - cells.length).fill(Colour.NONE));\n  }\n\n  return [height, width, cells];\n};\n\nexport class LevelProvider {\n  #location: Location;\n\n  constructor(location: Location) {\n    this.#location = location;\n  }\n\n  generate(\n    height: number = -1,\n    width: number = -1,\n    difficulty: Difficulty = Difficulty.NORMAL\n  ): LevelData {\n    return loadFromString(...levels[Math.floor(Math.random() * levels.length)]);\n  }\n\n  fromURL(): LevelData {\n    const [height, width, levelString] = JSON.parse(\n      atob(this.#location.hash.slice(1))\n    );\n\n    return loadFromString(height, width, levelString);\n  }\n}\n\nexport default LevelProvider;\n", "import './app.scss';\nimport Cell from './components/Cell';\nimport Colour from './lib/Colour';\nimport Grid from './components/Grid';\nimport LevelProvider from './lib/LevelProvider';\nimport Point from './components/Point';\n\nconst levelProvider = new LevelProvider(location),\n  [height, width, levelData] =\n    location.hash.length > 1\n      ? levelProvider.fromURL()\n      : levelProvider.generate();\n\nconst grid = new Grid(\n    height,\n    width,\n    levelData.map((pointColour, index) =>\n      pointColour === Colour.NONE\n        ? new Cell(index)\n        : new Point(index, pointColour)\n    )\n  ),\n  appContainer = document.getElementById('app');\n\nappContainer.append(grid.element());\n"],
  "mappings": "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",
  "names": ["require_Element", "__commonJSMin", "exports", "e", "t", "s", "o", "r", "Colour", "colourToClassNameLookup", "colourToClassName", "colours", "colour", "Colour_default", "import_element", "Element", "BaseElement", "key", "value", "Element_default", "_colour", "_connections", "_index", "Cell", "Element_default", "index", "__privateAdd", "Colour_default", "__privateSet", "__privateGet", "colour", "colourToClassName", "connection", "connectionIndex", "final", "Cell_default", "Point", "Cell_default", "index", "colour", "Point_default", "isNeighbour", "cell", "otherCell", "height", "width", "x", "y", "_cells", "_colour", "_grid", "_status", "Path", "colour", "grid", "__privateAdd", "__privateSet", "cell", "breakIndex", "__privateGet", "startChain", "Point_default", "last", "first", "otherCell", "isNeighbour", "wasComplete", "Colour_default", "status", "Path_default", "createNode", "cell", "stack", "_candidates", "_cells", "_from", "_grid", "_neighbourCache", "_seen", "_stack", "_to", "PathFinder", "grid", "from", "to", "__privateAdd", "__privateSet", "__privateGet", "currentNode", "neighbourCell", "Point_default", "node", "otherCell", "isNeighbour", "shortest", "a", "b", "PathFinder_default", "_cellMap", "_currentPath", "_paths", "_height", "_width", "Grid", "Element_default", "height", "width", "cells", "__privateAdd", "cell", "__privateGet", "event", "existingPath", "__privateSet", "Point_default", "path", "Path_default", "currentPath", "_a", "otherPath", "last", "pathFinder", "PathFinder_default", "Grid_default", "levels", "loadFromString", "height", "width", "gridDefinition", "matches", "cells", "value", "Colour_default", "area", "_location", "LevelProvider", "location", "__privateAdd", "__privateSet", "difficulty", "levels", "levelString", "__privateGet", "LevelProvider_default", "levelProvider", "LevelProvider_default", "height", "width", "levelData", "grid", "Grid_default", "pointColour", "index", "Colour_default", "Cell_default", "Point_default", "appContainer"]
}
